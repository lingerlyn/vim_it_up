!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<A-j>	init.vim	/^inoremap <A-j> <Esc>:m .+1<CR>==gi$/;"	m
<A-j>	init.vim	/^nnoremap <A-j> :m .+1<CR>==$/;"	m
<A-j>	init.vim	/^vnoremap <A-j> :m '>+1<CR>gv=gv$/;"	m
<A-k>	init.vim	/^inoremap <A-k> <Esc>:m .-2<CR>==gi$/;"	m
<A-k>	init.vim	/^nnoremap <A-k> :m .-2<CR>==$/;"	m
<A-k>	init.vim	/^vnoremap <A-k> :m '<-2<CR>gv=gv$/;"	m
<CR>	init.vim	/^inoremap <silent> <expr> <CR> ncm2_ultisnips#expand_or("\\<CR>", 'n')$/;"	m
<F2>	init.vim	/^nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>$/;"	m
<F5>	init.vim	/^nnoremap <F5> :call LanguageClient_contextMenu()<CR>$/;"	m
<F6>	init.vim	/^nnoremap <silent> <F6> :let _s=@\/ <Bar> :%s\/\\s\\+$\/\/e <Bar> :let @\/=_s <Bar> :nohl <Bar> :unlet _s <CR>$/;"	m
<F9>	init.vim	/^nnoremap <F9> :Dispatch<CR>$/;"	m
<Space>	init.vim	/^noremap <Space> <Nop>$/;"	m
<leader><space>	init.vim	/^nnoremap <silent> <leader><space> :Buffers<CR>$/;"	m
<leader>?	init.vim	/^nnoremap <silent> <leader>? :History<CR>$/;"	m
<leader>A	init.vim	/^nnoremap <silent> <leader>A :Windows<CR>$/;"	m
<leader>b	init.vim	/^nnoremap <silent> <leader>b :Gbranch<CR>$/;"	m
<leader>c	init.vim	/^nnoremap <silent> <leader>c :Commits<CR>$/;"	m
<leader>d	init.vim	/^map <silent> <leader>d :Lexplore<CR>$/;"	m
<leader>d	init.vim	/^noremap <silent> <leader>d :call ToggleNetrw()<CR><Paste>$/;"	m
<leader>f	init.vim	/^nnoremap <silent> <leader>f :ProjectFiles<CR>$/;"	m
<leader>l	init.vim	/^nnoremap <silent> <leader>l :BLines<CR>$/;"	m
<leader>o	init.vim	/^nnoremap <silent> <leader>o :BTags<CR>$/;"	m
<leader>p	init.vim	/^map <silent> <leader>p :Projects<CR>$/;"	m
<leader>s	init.vim	/^nnoremap <silent> <leader>s :Rg<CR>$/;"	m
<leader>t	init.vim	/^nnoremap <silent> <leader>t :Tags<CR>$/;"	m
Dispatch	init.vim	/^augroup Dispatch$/;"	a
Gbranch	init.vim	/^command! -bang Gbranch call fzf#run({$/;"	c
JSON	init.vim	/^augroup JSON $/;"	a
K	init.vim	/^nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>$/;"	m
LanguageClient_config	init.vim	/^augroup LanguageClient_config$/;"	a
N	init.vim	/^nnoremap <expr> N  'nN'[v:searchforward]$/;"	m
N	init.vim	/^onoremap <expr> N  'nN'[v:searchforward]$/;"	m
ProjectFiles	init.vim	/^command! ProjectFiles execute 'Files' s:find_git_root()$/;"	c
ProjectWrap	init.vim	/^function ProjectWrap()$/;"	f
Projects	init.vim	/^command! -bang Projects call fzf#run({$/;"	c
Rg	init.vim	/^command! -bang -nargs=* Rg$/;"	c
ToggleNetrw	init.vim	/^function! ToggleNetrw()$/;"	f
backup_configurations	vimitup.sh	/^backup_configurations(){$/;"	f
changebranch	init.vim	/^function! s:changebranch(branch) $/;"	f
customize_tmux	vimitup.sh	/^customize_tmux(){$/;"	f
find_git_root	init.vim	/^function! s:find_git_root()$/;"	f
g:LanguageClient_diagnosticsDisplay	init.vim	/^let g:LanguageClient_diagnosticsDisplay = {$/;"	v
g:LanguageClient_serverCommands	init.vim	/^let g:LanguageClient_serverCommands = {$/;"	v
g:LanguageClient_settingsPath	init.vim	/^let g:LanguageClient_settingsPath = $HOME.'\/.config\/nvim\/settings.json'$/;"	v
g:NetrwIsOpen	init.vim	/^let g:NetrwIsOpen=0$/;"	v
g:UltiSnipsJumpBackwardTrigger	init.vim	/^let g:UltiSnipsJumpBackwardTrigger	= "<c-k>"$/;"	v
g:UltiSnipsJumpForwardTrigger	init.vim	/^let g:UltiSnipsJumpForwardTrigger	= "<c-j>"$/;"	v
g:UltiSnipsRemoveSelectModeMappings	init.vim	/^let g:UltiSnipsRemoveSelectModeMappings = 0$/;"	v
g:gruvbox_italic	init.vim	/^let g:gruvbox_italic=1$/;"	v
g:gruvbox_sign_column	init.vim	/^let g:gruvbox_sign_column='bg0'$/;"	v
g:gutentags_file_list_command	init.vim	/^let g:gutentags_file_list_command = 'rg --files'$/;"	v
g:lightline	init.vim	/^let g:lightline = {$/;"	v
g:netrw_banner	init.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_browse_split	init.vim	/^let g:netrw_browse_split = 4$/;"	v
g:netrw_liststyle	init.vim	/^let g:netrw_liststyle = 3$/;"	v
g:netrw_sort_sequence	init.vim	/^let g:netrw_sort_sequence = '[\\\/]$,*'$/;"	v
g:netrw_winsize	init.vim	/^let g:netrw_winsize = -28$/;"	v
g:python3_host_prog	init.vim	/^let g:python3_host_prog=$HOME.'\/.virtualenvs\/neovim3\/bin\/python'$/;"	v
g:python_host_prog	init.vim	/^let g:python_host_prog=$HOME.'\/.virtualenvs\/neovim2\/bin\/python'$/;"	v
g:vimtex_compiler_progname	init.vim	/^let g:vimtex_compiler_progname = $HOME.'\/.virtualenvs\/neovim3\/bin\/nvr'$/;"	v
ga	init.vim	/^nmap ga <Plug>(EasyAlign)$/;"	m
gd	init.vim	/^nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>$/;"	m
gr	init.vim	/^nnoremap <silent> gr :call LanguageClient#textDocument_references()<CR>$/;"	m
gs	init.vim	/^nnoremap <silent> gs :call LanguageClient#textDocument_documentSymbol()<CR>$/;"	m
install_apt_packages	vimitup.sh	/^install_apt_packages(){$/;"	f
install_neovim	vimitup.sh	/^install_neovim(){$/;"	f
install_rust_dependencies	vimitup.sh	/^install_rust_dependencies(){$/;"	f
make_virtual_envs	vimitup.sh	/^make_virtual_envs(){$/;"	f
mapleader	init.vim	/^let mapleader="\\<Space>"$/;"	v
n	init.vim	/^nnoremap <expr> n  'Nn'[v:searchforward]$/;"	m
n	init.vim	/^onoremap <expr> n  'Nn'[v:searchforward]$/;"	m
restore_backup	vimitup.sh	/^restore_backup(){$/;"	f
uninstall_neovim	vimitup.sh	/^uninstall_neovim(){$/;"	f
